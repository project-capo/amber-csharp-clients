// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace amber.stargazer_proto {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Stargazer {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::amber.stargazer_proto.Stargazer.LocalizationData);
      registry.Add(global::amber.stargazer_proto.Stargazer.DataRequest);
      registry.Add(global::amber.stargazer_proto.Stargazer.SubscribeAction);
    }
    #endregion
    #region Extensions
    public const int LocalizationDataFieldNumber = 10;
    public static pb::GeneratedExtensionBase<global::amber.stargazer_proto.LocalizationData> LocalizationData;
    public const int DataRequestFieldNumber = 11;
    public static pb::GeneratedExtensionBase<global::amber.stargazer_proto.DataRequest> DataRequest;
    public const int SubscribeActionFieldNumber = 12;
    public static pb::GeneratedExtensionBase<global::amber.stargazer_proto.SubscribeAction> SubscribeAction;
    #endregion
    
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_amber_stargazer_proto_LocalizationData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::amber.stargazer_proto.LocalizationData, global::amber.stargazer_proto.LocalizationData.Builder> internal__static_amber_stargazer_proto_LocalizationData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_amber_stargazer_proto_DataRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::amber.stargazer_proto.DataRequest, global::amber.stargazer_proto.DataRequest.Builder> internal__static_amber_stargazer_proto_DataRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_amber_stargazer_proto_SubscribeAction__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::amber.stargazer_proto.SubscribeAction, global::amber.stargazer_proto.SubscribeAction.Builder> internal__static_amber_stargazer_proto_SubscribeAction__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Stargazer() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg9zdGFyZ2F6ZXIucHJvdG8SFWFtYmVyLnN0YXJnYXplcl9wcm90bxoPZHJp" + 
          "dmVybXNnLnByb3RvInAKEExvY2FsaXphdGlvbkRhdGESDAoEeFBvcxgBIAIo" + 
          "AhIMCgR5UG9zGAIgAigCEgwKBHpQb3MYAyACKAISDQoFYW5nbGUYBCACKAIS" + 
          "EAoIbWFya2VySUQYBSACKA0SEQoJdGltZXN0YW1wGAYgASgNIg0KC0RhdGFS" + 
          "ZXF1ZXN0IpMBCg9TdWJzY3JpYmVBY3Rpb24SSAoGYWN0aW9uGAEgAigOMi0u" + 
          "YW1iZXIuc3RhcmdhemVyX3Byb3RvLlN1YnNjcmliZUFjdGlvbi5BQ1RJT046" + 
          "CVNVQlNDUklCRRIMCgRmcmVxGAIgASgNIigKBkFDVElPThINCglTVUJTQ1JJ" + 
          "QkUQARIPCgtVTlNVQlNDUklCRRACOlMKEGxvY2FsaXphdGlvbkRhdGESEC5h" + 
          "bWJlci5Ecml2ZXJNc2cYCiABKAsyJy5hbWJlci5zdGFyZ2F6ZXJfcHJvdG8u" + 
          "TG9jYWxpemF0aW9uRGF0YTpJCgtkYXRhUmVxdWVzdBIQLmFtYmVyLkRyaXZl" + 
          "ck1zZxgLIAEoCzIiLmFtYmVyLnN0YXJnYXplcl9wcm90by5EYXRhUmVxdWVz" + 
          "dDpRCg9zdWJzY3JpYmVBY3Rpb24SEC5hbWJlci5Ecml2ZXJNc2cYDCABKAsy" + 
          "Ji5hbWJlci5zdGFyZ2F6ZXJfcHJvdG8uU3Vic2NyaWJlQWN0aW9uQiEKD3N0" + 
          "YXJnYXplci5wcm90b0IOU3RhcmdhemVyUHJvdG8=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_amber_stargazer_proto_LocalizationData__Descriptor = Descriptor.MessageTypes[0];
        internal__static_amber_stargazer_proto_LocalizationData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::amber.stargazer_proto.LocalizationData, global::amber.stargazer_proto.LocalizationData.Builder>(internal__static_amber_stargazer_proto_LocalizationData__Descriptor,
                new string[] { "XPos", "YPos", "ZPos", "Angle", "MarkerID", "Timestamp", });
        internal__static_amber_stargazer_proto_DataRequest__Descriptor = Descriptor.MessageTypes[1];
        internal__static_amber_stargazer_proto_DataRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::amber.stargazer_proto.DataRequest, global::amber.stargazer_proto.DataRequest.Builder>(internal__static_amber_stargazer_proto_DataRequest__Descriptor,
                new string[] { });
        internal__static_amber_stargazer_proto_SubscribeAction__Descriptor = Descriptor.MessageTypes[2];
        internal__static_amber_stargazer_proto_SubscribeAction__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::amber.stargazer_proto.SubscribeAction, global::amber.stargazer_proto.SubscribeAction.Builder>(internal__static_amber_stargazer_proto_SubscribeAction__Descriptor,
                new string[] { "Action", "Freq", });
        global::amber.stargazer_proto.Stargazer.LocalizationData = pb::GeneratedSingleExtension<global::amber.stargazer_proto.LocalizationData>.CreateInstance(global::amber.stargazer_proto.Stargazer.Descriptor.Extensions[0]);
        global::amber.stargazer_proto.Stargazer.DataRequest = pb::GeneratedSingleExtension<global::amber.stargazer_proto.DataRequest>.CreateInstance(global::amber.stargazer_proto.Stargazer.Descriptor.Extensions[1]);
        global::amber.stargazer_proto.Stargazer.SubscribeAction = pb::GeneratedSingleExtension<global::amber.stargazer_proto.SubscribeAction>.CreateInstance(global::amber.stargazer_proto.Stargazer.Descriptor.Extensions[2]);
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::amber.Drivermsg.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LocalizationData : pb::GeneratedMessage<LocalizationData, LocalizationData.Builder> {
    private LocalizationData() { }
    private static readonly LocalizationData defaultInstance = new LocalizationData().MakeReadOnly();
    private static readonly string[] _localizationDataFieldNames = new string[] { "angle", "markerID", "timestamp", "xPos", "yPos", "zPos" };
    private static readonly uint[] _localizationDataFieldTags = new uint[] { 37, 40, 48, 13, 21, 29 };
    public static LocalizationData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LocalizationData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LocalizationData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::amber.stargazer_proto.Stargazer.internal__static_amber_stargazer_proto_LocalizationData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LocalizationData, LocalizationData.Builder> InternalFieldAccessors {
      get { return global::amber.stargazer_proto.Stargazer.internal__static_amber_stargazer_proto_LocalizationData__FieldAccessorTable; }
    }
    
    public const int XPosFieldNumber = 1;
    private bool hasXPos;
    private float xPos_;
    public bool HasXPos {
      get { return hasXPos; }
    }
    public float XPos {
      get { return xPos_; }
    }
    
    public const int YPosFieldNumber = 2;
    private bool hasYPos;
    private float yPos_;
    public bool HasYPos {
      get { return hasYPos; }
    }
    public float YPos {
      get { return yPos_; }
    }
    
    public const int ZPosFieldNumber = 3;
    private bool hasZPos;
    private float zPos_;
    public bool HasZPos {
      get { return hasZPos; }
    }
    public float ZPos {
      get { return zPos_; }
    }
    
    public const int AngleFieldNumber = 4;
    private bool hasAngle;
    private float angle_;
    public bool HasAngle {
      get { return hasAngle; }
    }
    public float Angle {
      get { return angle_; }
    }
    
    public const int MarkerIDFieldNumber = 5;
    private bool hasMarkerID;
    private uint markerID_;
    public bool HasMarkerID {
      get { return hasMarkerID; }
    }
    [global::System.CLSCompliant(false)]
    public uint MarkerID {
      get { return markerID_; }
    }
    
    public const int TimestampFieldNumber = 6;
    private bool hasTimestamp;
    private uint timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public uint Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasXPos) return false;
        if (!hasYPos) return false;
        if (!hasZPos) return false;
        if (!hasAngle) return false;
        if (!hasMarkerID) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _localizationDataFieldNames;
      if (hasXPos) {
        output.WriteFloat(1, field_names[3], XPos);
      }
      if (hasYPos) {
        output.WriteFloat(2, field_names[4], YPos);
      }
      if (hasZPos) {
        output.WriteFloat(3, field_names[5], ZPos);
      }
      if (hasAngle) {
        output.WriteFloat(4, field_names[0], Angle);
      }
      if (hasMarkerID) {
        output.WriteUInt32(5, field_names[1], MarkerID);
      }
      if (hasTimestamp) {
        output.WriteUInt32(6, field_names[2], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasXPos) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, XPos);
        }
        if (hasYPos) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, YPos);
        }
        if (hasZPos) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, ZPos);
        }
        if (hasAngle) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, Angle);
        }
        if (hasMarkerID) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, MarkerID);
        }
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeUInt32Size(6, Timestamp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LocalizationData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LocalizationData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LocalizationData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LocalizationData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LocalizationData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LocalizationData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LocalizationData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LocalizationData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LocalizationData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LocalizationData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LocalizationData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LocalizationData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LocalizationData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LocalizationData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LocalizationData result;
      
      private LocalizationData PrepareBuilder() {
        if (resultIsReadOnly) {
          LocalizationData original = result;
          result = new LocalizationData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LocalizationData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::amber.stargazer_proto.LocalizationData.Descriptor; }
      }
      
      public override LocalizationData DefaultInstanceForType {
        get { return global::amber.stargazer_proto.LocalizationData.DefaultInstance; }
      }
      
      public override LocalizationData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LocalizationData) {
          return MergeFrom((LocalizationData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LocalizationData other) {
        if (other == global::amber.stargazer_proto.LocalizationData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasXPos) {
          XPos = other.XPos;
        }
        if (other.HasYPos) {
          YPos = other.YPos;
        }
        if (other.HasZPos) {
          ZPos = other.ZPos;
        }
        if (other.HasAngle) {
          Angle = other.Angle;
        }
        if (other.HasMarkerID) {
          MarkerID = other.MarkerID;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_localizationDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _localizationDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasXPos = input.ReadFloat(ref result.xPos_);
              break;
            }
            case 21: {
              result.hasYPos = input.ReadFloat(ref result.yPos_);
              break;
            }
            case 29: {
              result.hasZPos = input.ReadFloat(ref result.zPos_);
              break;
            }
            case 37: {
              result.hasAngle = input.ReadFloat(ref result.angle_);
              break;
            }
            case 40: {
              result.hasMarkerID = input.ReadUInt32(ref result.markerID_);
              break;
            }
            case 48: {
              result.hasTimestamp = input.ReadUInt32(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasXPos {
        get { return result.hasXPos; }
      }
      public float XPos {
        get { return result.XPos; }
        set { SetXPos(value); }
      }
      public Builder SetXPos(float value) {
        PrepareBuilder();
        result.hasXPos = true;
        result.xPos_ = value;
        return this;
      }
      public Builder ClearXPos() {
        PrepareBuilder();
        result.hasXPos = false;
        result.xPos_ = 0F;
        return this;
      }
      
      public bool HasYPos {
        get { return result.hasYPos; }
      }
      public float YPos {
        get { return result.YPos; }
        set { SetYPos(value); }
      }
      public Builder SetYPos(float value) {
        PrepareBuilder();
        result.hasYPos = true;
        result.yPos_ = value;
        return this;
      }
      public Builder ClearYPos() {
        PrepareBuilder();
        result.hasYPos = false;
        result.yPos_ = 0F;
        return this;
      }
      
      public bool HasZPos {
        get { return result.hasZPos; }
      }
      public float ZPos {
        get { return result.ZPos; }
        set { SetZPos(value); }
      }
      public Builder SetZPos(float value) {
        PrepareBuilder();
        result.hasZPos = true;
        result.zPos_ = value;
        return this;
      }
      public Builder ClearZPos() {
        PrepareBuilder();
        result.hasZPos = false;
        result.zPos_ = 0F;
        return this;
      }
      
      public bool HasAngle {
        get { return result.hasAngle; }
      }
      public float Angle {
        get { return result.Angle; }
        set { SetAngle(value); }
      }
      public Builder SetAngle(float value) {
        PrepareBuilder();
        result.hasAngle = true;
        result.angle_ = value;
        return this;
      }
      public Builder ClearAngle() {
        PrepareBuilder();
        result.hasAngle = false;
        result.angle_ = 0F;
        return this;
      }
      
      public bool HasMarkerID {
        get { return result.hasMarkerID; }
      }
      [global::System.CLSCompliant(false)]
      public uint MarkerID {
        get { return result.MarkerID; }
        set { SetMarkerID(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMarkerID(uint value) {
        PrepareBuilder();
        result.hasMarkerID = true;
        result.markerID_ = value;
        return this;
      }
      public Builder ClearMarkerID() {
        PrepareBuilder();
        result.hasMarkerID = false;
        result.markerID_ = 0;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public uint Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(uint value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0;
        return this;
      }
    }
    static LocalizationData() {
      object.ReferenceEquals(global::amber.stargazer_proto.Stargazer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DataRequest : pb::GeneratedMessage<DataRequest, DataRequest.Builder> {
    private DataRequest() { }
    private static readonly DataRequest defaultInstance = new DataRequest().MakeReadOnly();
    private static readonly string[] _dataRequestFieldNames = new string[] {  };
    private static readonly uint[] _dataRequestFieldTags = new uint[] {  };
    public static DataRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DataRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DataRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::amber.stargazer_proto.Stargazer.internal__static_amber_stargazer_proto_DataRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DataRequest, DataRequest.Builder> InternalFieldAccessors {
      get { return global::amber.stargazer_proto.Stargazer.internal__static_amber_stargazer_proto_DataRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dataRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DataRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DataRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DataRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DataRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DataRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DataRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DataRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DataRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DataRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DataRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DataRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DataRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DataRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DataRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DataRequest result;
      
      private DataRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DataRequest original = result;
          result = new DataRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DataRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::amber.stargazer_proto.DataRequest.Descriptor; }
      }
      
      public override DataRequest DefaultInstanceForType {
        get { return global::amber.stargazer_proto.DataRequest.DefaultInstance; }
      }
      
      public override DataRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DataRequest) {
          return MergeFrom((DataRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DataRequest other) {
        if (other == global::amber.stargazer_proto.DataRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dataRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dataRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static DataRequest() {
      object.ReferenceEquals(global::amber.stargazer_proto.Stargazer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SubscribeAction : pb::GeneratedMessage<SubscribeAction, SubscribeAction.Builder> {
    private SubscribeAction() { }
    private static readonly SubscribeAction defaultInstance = new SubscribeAction().MakeReadOnly();
    private static readonly string[] _subscribeActionFieldNames = new string[] { "action", "freq" };
    private static readonly uint[] _subscribeActionFieldTags = new uint[] { 8, 16 };
    public static SubscribeAction DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeAction DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeAction ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::amber.stargazer_proto.Stargazer.internal__static_amber_stargazer_proto_SubscribeAction__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeAction, SubscribeAction.Builder> InternalFieldAccessors {
      get { return global::amber.stargazer_proto.Stargazer.internal__static_amber_stargazer_proto_SubscribeAction__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ACTION {
        SUBSCRIBE = 1,
        UNSUBSCRIBE = 2,
      }
      
    }
    #endregion
    
    public const int ActionFieldNumber = 1;
    private bool hasAction;
    private global::amber.stargazer_proto.SubscribeAction.Types.ACTION action_ = global::amber.stargazer_proto.SubscribeAction.Types.ACTION.SUBSCRIBE;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::amber.stargazer_proto.SubscribeAction.Types.ACTION Action {
      get { return action_; }
    }
    
    public const int FreqFieldNumber = 2;
    private bool hasFreq;
    private uint freq_;
    public bool HasFreq {
      get { return hasFreq; }
    }
    [global::System.CLSCompliant(false)]
    public uint Freq {
      get { return freq_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAction) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeActionFieldNames;
      if (hasAction) {
        output.WriteEnum(1, field_names[0], (int) Action, Action);
      }
      if (hasFreq) {
        output.WriteUInt32(2, field_names[1], Freq);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAction) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Action);
        }
        if (hasFreq) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Freq);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeAction ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeAction ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeAction ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeAction ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeAction ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeAction ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeAction ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeAction ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeAction ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeAction ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeAction MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeAction prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeAction, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeAction cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeAction result;
      
      private SubscribeAction PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeAction original = result;
          result = new SubscribeAction();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeAction MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::amber.stargazer_proto.SubscribeAction.Descriptor; }
      }
      
      public override SubscribeAction DefaultInstanceForType {
        get { return global::amber.stargazer_proto.SubscribeAction.DefaultInstance; }
      }
      
      public override SubscribeAction BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeAction) {
          return MergeFrom((SubscribeAction) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeAction other) {
        if (other == global::amber.stargazer_proto.SubscribeAction.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAction) {
          Action = other.Action;
        }
        if (other.HasFreq) {
          Freq = other.Freq;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeActionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeActionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasFreq = input.ReadUInt32(ref result.freq_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::amber.stargazer_proto.SubscribeAction.Types.ACTION Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::amber.stargazer_proto.SubscribeAction.Types.ACTION value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::amber.stargazer_proto.SubscribeAction.Types.ACTION.SUBSCRIBE;
        return this;
      }
      
      public bool HasFreq {
        get { return result.hasFreq; }
      }
      [global::System.CLSCompliant(false)]
      public uint Freq {
        get { return result.Freq; }
        set { SetFreq(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFreq(uint value) {
        PrepareBuilder();
        result.hasFreq = true;
        result.freq_ = value;
        return this;
      }
      public Builder ClearFreq() {
        PrepareBuilder();
        result.hasFreq = false;
        result.freq_ = 0;
        return this;
      }
    }
    static SubscribeAction() {
      object.ReferenceEquals(global::amber.stargazer_proto.Stargazer.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
